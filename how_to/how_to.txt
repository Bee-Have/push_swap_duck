!!!!!!!!!!!!! BABY STEPS !!!!!!!!!!!!!

so

we have to sort numbers from tiniest value to bigest value

we need 2 listes chainÃ©es;
	- one filled with numbers
	- the other empty but with the size of the other one

start by implementing the possible operations;
we'll see where we go from there

main gets list info
	sends it to push_swap
		((in what format though ?))
		((subject explicitly says int*))
push_swap gets numbers
init struct list with numbers

//this we will do later
start sorting

-----------------------------------------

stack A operations = sa pa ra rra
stack B operations = sb pb rb rrb
stacks operations = ss rr rrr

s p rr - ss rr rrr

--

STACK A

S = 
	switch value of firs two values of the stack
	ex : tail-1234-head -> tail-2134-head
P =
	take first element of A and put it in B
	ex : a-1234 b-0000 -> a-2340 b-1000

------------------------------------

if i want a specific node
what is my stop point ?
do i send the value i'm looking for ?
i think that would be the easiest way

it's to foggy for us for now...
let's keep this for later
we'll probably know exactly how and what we want


--------------------------------------------------

first get send the list to a general algorythm manager
this algo manager will send the list to the : "get_already_sorted_stuff_out()"
then to the : "check_least_number_of_moves()"
	which will return the id of the node to deal with
and finally send that id to the algorythm that will sort it
